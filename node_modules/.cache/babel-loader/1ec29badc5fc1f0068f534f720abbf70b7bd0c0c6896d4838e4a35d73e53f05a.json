{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"Person\",\n  data() {\n    return {\n      form: {},\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\n    };\n  },\n  created() {\n    this.getUser().then(res => {\n      console.log(res);\n    });\n  },\n  methods: {\n    async getUser() {\n      return (await request.get(\"http://localhost:8080/user/username/\" + this.user.username)).data;\n    },\n    save() {\n      request.post(\"http://localhost:8080/user\", this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"保存成功\");\n\n          // 更新浏览器存储的用户信息\n          let user = this.getUser();\n          user.token = JSON.parse(localStorage.getItem(\"user\")).token;\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      });\n    },\n    handleAvatarSuccess(res) {\n      this.form.avatarUrl = res;\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","form","user","localStorage","getItem","JSON","parse","created","getUser","then","res","console","log","methods","get","username","save","post","code","$message","success","token","setItem","stringify","error","handleAvatarSuccess","avatarUrl"],"sources":["src/views/Person.vue"],"sourcesContent":["<template>\r\n  <el-card style=\"width: 500px\">\r\n    <el-form label-width=\"80px\" size=\"small\">\r\n      <el-upload\r\n          class=\"avatar-uploader\"\r\n          action=\"http://localhost:8080/file/upload\"\r\n          :show-file-list=\"false\"\r\n          :on-success=\"handleAvatarSuccess\">\r\n        <img v-if=\"form.avatarUrl\" :src=\"form.avatarUrl\" class=\"avatar\">\r\n        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n      </el-upload>\r\n\r\n      <el-form-item label=\"用户名\">\r\n        <!--用v-model实现双向绑定，无论哪一方的数据变了，另一方也会变-->\r\n        <el-input v-model=\"form.username\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"昵称\">\r\n        <el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"邮箱\">\r\n        <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"电话\">\r\n        <el-input v-model=\"form.phone\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"地址\">\r\n        <el-input v-model=\"form.address\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"Person\",\r\n  data(){\r\n    return{\r\n      form: {},\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\r\n    }\r\n  },\r\n  created() {\r\n    this.getUser().then(res => {\r\n      console.log(res)\r\n      \r\n    })\r\n  },\r\n  methods: {\r\n    async getUser(){\r\n      return (await request.get(\"http://localhost:8080/user/username/\" + this.user.username)).data\r\n    },\r\n    save()\r\n    {\r\n      request.post(\"http://localhost:8080/user\", this.form).then(res => {\r\n        if (res.code === '200')\r\n        {\r\n          this.$message.success(\"保存成功\")\r\n\r\n          // 更新浏览器存储的用户信息\r\n          let user = this.getUser()\r\n          user.token = JSON.parse(localStorage.getItem(\"user\")).token\r\n          localStorage.setItem(\"user\", JSON.stringify(user))\r\n        }\r\n        else\r\n        {\r\n          this.$message.error(\"保存失败\")\r\n        }\r\n      })\r\n    },\r\n    handleAvatarSuccess(res){\r\n      this.form.avatarUrl = res\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.avatar-uploader{\r\n  text-align: center;\r\n}\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 158px;\r\n  height: 158px;\r\n  line-height: 158px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 138px;\r\n  height: 138px;\r\n  display: block;\r\n}\r\n\r\n</style>"],"mappings":"AAyCA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,OAAA,GAAAC,IAAA,CAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;IAEA;EACA;EACAG,OAAA;IACA,MAAAL,QAAA;MACA,cAAAV,OAAA,CAAAgB,GAAA,+CAAAZ,IAAA,CAAAa,QAAA,GAAAf,IAAA;IACA;IACAgB,KAAA,EACA;MACAlB,OAAA,CAAAmB,IAAA,oCAAAhB,IAAA,EAAAQ,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAQ,IAAA,YACA;UACA,KAAAC,QAAA,CAAAC,OAAA;;UAEA;UACA,IAAAlB,IAAA,QAAAM,OAAA;UACAN,IAAA,CAAAmB,KAAA,GAAAhB,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA,UAAAiB,KAAA;UACAlB,YAAA,CAAAmB,OAAA,SAAAjB,IAAA,CAAAkB,SAAA,CAAArB,IAAA;QACA,OAEA;UACA,KAAAiB,QAAA,CAAAK,KAAA;QACA;MACA;IACA;IACAC,oBAAAf,GAAA;MACA,KAAAT,IAAA,CAAAyB,SAAA,GAAAhB,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}