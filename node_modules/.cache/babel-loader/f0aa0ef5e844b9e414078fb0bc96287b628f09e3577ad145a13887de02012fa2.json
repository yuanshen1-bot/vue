{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"User\",\n  data() {\n    return {\n      //      tableData: Array(10).fill(item),\n      tableData: [],\n      name: \"\",\n      description: \"\",\n      path: \"\",\n      icon: \"\",\n      dialogFormVisible: false,\n      multipleSelection: [],\n      form: {},\n      pageNum: 1,\n      //起始页\n      pageSize: 8,\n      //页的大小\n      total: 0,\n      headerBg: 'headerBg'\n    };\n  },\n  created() {\n    // 加载时运行的方法\n    this.load();\n  },\n  methods: {\n    load() {\n      // 请求分页查询数据\n      request.get(\"http://localhost:8080/menu/page\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          description: this.description\n        }\n      }).then(res => {\n        console.log(res);\n        this.tableData = res.data.records;\n        this.total = res.data.total;\n      });\n    },\n    reset() {\n      this.name = \"\";\n      this.load();\n    },\n    handleEdit(row) {\n      // 修改的话，要把这行原来的信息读到form列表里\n      this.form = row;\n      // 触发弹窗\n      this.dialogFormVisible = true;\n    },\n    handleAdd() {\n      // 增加的话，要建个空的form列表\n      this.form = {};\n      // 触发弹窗\n      this.dialogFormVisible = true;\n    },\n    handleDel(id) {\n      request.delete(\"http://localhost:8080/menu/\" + id).then(res => {\n        if (res.code === '200') {\n          // 显示弹窗\n          this.$message.success(\"删除成功\");\n          this.dialogFormVisible = false;\n          this.load();\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      });\n    },\n    //这个函数在选中一行后会返回该行的信息\n    handleSelectionChange(val) {\n      console.log(val);\n      this.multipleSelection = val;\n    },\n    delBatch() {\n      let ids = this.multipleSelection.map(v => v.id); // [{}, {}, {}] => []\n      request.post(\"http://localhost:8080/menu/del/batch\", ids).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"批量删除成功\");\n          this.dialogFormVisible = false;\n          this.load();\n        } else {\n          this.$message.error(\"批量删除失败\");\n        }\n      });\n    },\n    cancel() {\n      this.dialogFormVisible = false;\n      this.load();\n    },\n    // 增加或更新都调用这个函数\n    save() {\n      request.post(\"http://localhost:8080/menu\", this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"保存成功\");\n          this.dialogFormVisible = false;\n          this.load();\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      });\n    },\n    handleSizeChange(pageSize) {\n      console.log(pageSize);\n      this.pageSize = pageSize;\n      this.load();\n    },\n    handleCurrentChange(pageNum) {\n      console.log(pageNum);\n      this.pageNum = pageNum;\n      this.load();\n    },\n    exp() {\n      window.open(\"http://localhost:8080/menu/export\");\n    },\n    handleImportSuccess() {\n      this.$message.success(\"导入成功\");\n      this.load();\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","description","path","icon","dialogFormVisible","multipleSelection","form","pageNum","pageSize","total","headerBg","created","load","methods","get","params","then","res","console","log","records","reset","handleEdit","row","handleAdd","handleDel","id","delete","code","$message","success","error","handleSelectionChange","val","delBatch","ids","map","v","post","cancel","save","handleSizeChange","handleCurrentChange","exp","window","open","handleImportSuccess"],"sources":["src/views/Menu.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!--从上往下依次是搜索部分、增删改查、表格、页码-->\r\n    <div style=\"margin: 10px 0\">\r\n      <!--搜索框和按钮-->\r\n      <!--v-model实现双向绑定-->\r\n      <el-input style=\"width: 200px\" placeholder=\"请输入名称\" suffix-icon=\"el-icon-user\" v-model=\"name\" class=\"ml-5\"></el-input>\r\n      <!--用class引用CSS文件里的设置-->\r\n      <!--primary设置蓝色-->\r\n      <!--@click绑定load函数-->\r\n      <el-button class=\"ml-5\" type=\"primary\" @click=\"load\">搜索</el-button>\r\n      <el-button class=\"ml-5\" type=\"warning\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div style=\"margin: 10px 0\">\r\n      <el-button type=\"primary\" @click=\"handleAdd\">新增 <i class=\"el-icon-circle-plus-outline\"></i></el-button>\r\n      <el-popconfirm\r\n          class=\"ml-5\"\r\n          confirm-button-text='好的'\r\n          cancel-button-text='不用了'\r\n          icon=\"el-icon-info\"\r\n          icon-color=\"red\"\r\n          title=\"您确定删除吗？\"\r\n          @confirm=\"delBatch\">\r\n        <el-button type=\"danger\" slot=\"reference\">批量删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n      </el-popconfirm>\r\n<!--      <el-upload action=\"http://localhost:8080/menu/import\" :show-file-list=\"false\" accept=\".xlsx\" :on-success=\"handleImportSuccess\" style=\"display: inline-block\">-->\r\n<!--        <el-button type=\"primary\" class=\"ml-5\">导入 <i class=\"el-icon-bottom\"></i></el-button>-->\r\n<!--      </el-upload>-->\r\n<!--      <el-button type=\"primary\" @click=\"exp\" class=\"ml-5\">导出 <i class=\"el-icon-top\"></i></el-button>-->\r\n    </div>\r\n\r\n    <!--border设置边框，stripe设置斑马线表格-->\r\n    <el-table :data=\"tableData\" border stripe header-cell-class-name=\"headerBg\" @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n\r\n      <el-table-column prop=\"name\" label=\"名称\" ></el-table-column>\r\n\r\n      <el-table-column prop=\"path\" label=\"路径\" ></el-table-column>\r\n      <el-table-column prop=\"icon\" label=\"图标\" ></el-table-column>\r\n      <el-table-column prop=\"description\" label=\"描述\" ></el-table-column>\r\n\r\n      <el-table-column label=\"操作\">\r\n        <!--这个scope记录了该行的信息-->\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"danger\" slot=\"reference\">分配菜单 <i class=\"el-icon-edit\"></i></el-button>\r\n          <el-button type=\"warning\" @click=\"handleEdit(scope.row)\">编辑 <i class=\"el-icon-edit\"></i></el-button>\r\n          <el-popconfirm\r\n              class=\"ml-5\"\r\n              confirm-button-text='好的'\r\n              cancel-button-text='不用了'\r\n              icon=\"el-icon-info\"\r\n              icon-color=\"red\"\r\n              title=\"您确定删除吗？\"\r\n              @confirm=\"handleDel(scope.row.id)\">\r\n            <el-button type=\"danger\" slot=\"reference\">删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n\r\n    </el-table>\r\n\r\n    <div style=\"padding: 10px 0\">\r\n      <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"pageNum\"\r\n          :page-sizes=\"[2, 5, 10, 20]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n\r\n    <!--设置弹窗，当dialogFormVisible为true时，就会弹出来-->\r\n    <el-dialog title=\"菜单信息\" :visible.sync=\"dialogFormVisible\" width=\"30%\" >\r\n      <el-form label-width=\"80px\" size=\"small\">\r\n        <el-form-item label=\"名称\">\r\n          <!--用v-model实现双向绑定，无论哪一方的数据变了，另一方也会变-->\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"路径\">\r\n          <el-input v-model=\"form.path\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"图标\">\r\n          <el-input v-model=\"form.icon\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"form.description\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"cancel\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n<!--  要在最外层加个div，因为不允许多个div并行-->\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"User\",\r\n  data(){\r\n    return{\r\n//      tableData: Array(10).fill(item),\r\n      tableData: [],\r\n      name: \"\",\r\n      description: \"\",\r\n      path: \"\",\r\n      icon: \"\",\r\n      dialogFormVisible: false,\r\n      multipleSelection: [],\r\n      form: {},\r\n      pageNum: 1,  //起始页\r\n      pageSize: 8, //页的大小\r\n      total: 0,\r\n      headerBg: 'headerBg'\r\n    }\r\n  },\r\n  created() {\r\n    // 加载时运行的方法\r\n    this.load()\r\n  },\r\n  methods: {\r\n    load()\r\n    {\r\n      // 请求分页查询数据\r\n      request.get(\"http://localhost:8080/menu/page\", {\r\n        params:\r\n            {\r\n              pageNum: this.pageNum,\r\n              pageSize: this.pageSize,\r\n              name: this.name,\r\n              description: this.description,\r\n            }\r\n      }).then(res =>{\r\n        console.log(res)\r\n        this.tableData = res.data.records\r\n        this.total = res.data.total\r\n      })\r\n    },\r\n\r\n    reset()\r\n    {\r\n      this.name = \"\"\r\n      this.load()\r\n    },\r\n\r\n    handleEdit(row)\r\n    {\r\n      // 修改的话，要把这行原来的信息读到form列表里\r\n      this.form = row\r\n      // 触发弹窗\r\n      this.dialogFormVisible = true\r\n    },\r\n\r\n    handleAdd()\r\n    {\r\n      // 增加的话，要建个空的form列表\r\n      this.form = {}\r\n      // 触发弹窗\r\n      this.dialogFormVisible = true\r\n    },\r\n\r\n    handleDel(id)\r\n    {\r\n      request.delete(\"http://localhost:8080/menu/\" + id).then(res =>{\r\n        if (res.code === '200')\r\n        {\r\n          // 显示弹窗\r\n          this.$message.success(\"删除成功\")\r\n          this.dialogFormVisible = false\r\n          this.load()\r\n        }\r\n        else\r\n        {\r\n          this.$message.error(\"删除失败\")\r\n        }\r\n      })\r\n    },\r\n\r\n    //这个函数在选中一行后会返回该行的信息\r\n    handleSelectionChange(val)\r\n    {\r\n      console.log(val)\r\n      this.multipleSelection = val\r\n    },\r\n    delBatch()\r\n    {\r\n      let ids = this.multipleSelection.map(v => v.id) // [{}, {}, {}] => []\r\n      request.post(\"http://localhost:8080/menu/del/batch\", ids).then(res =>{\r\n        if (res.code === '200')\r\n        {\r\n          this.$message.success(\"批量删除成功\")\r\n          this.dialogFormVisible = false\r\n          this.load()\r\n        }\r\n        else\r\n        {\r\n          this.$message.error(\"批量删除失败\")\r\n        }\r\n      })\r\n    },\r\n\r\n    cancel()\r\n    {\r\n      this.dialogFormVisible = false\r\n      this.load()\r\n    },\r\n\r\n    // 增加或更新都调用这个函数\r\n    save()\r\n    {\r\n      request.post(\"http://localhost:8080/menu\", this.form).then(res => {\r\n        if (res.code === '200')\r\n        {\r\n          this.$message.success(\"保存成功\")\r\n          this.dialogFormVisible = false\r\n          this.load()\r\n        }\r\n        else\r\n        {\r\n          this.$message.error(\"保存失败\")\r\n        }\r\n      })\r\n    },\r\n\r\n    handleSizeChange(pageSize)\r\n    {\r\n      console.log(pageSize)\r\n      this.pageSize = pageSize\r\n      this.load()\r\n    },\r\n    handleCurrentChange(pageNum)\r\n    {\r\n      console.log(pageNum)\r\n      this.pageNum = pageNum\r\n      this.load()\r\n    },\r\n\r\n    exp(){\r\n      window.open(\"http://localhost:8080/menu/export\")\r\n\r\n    },\r\n\r\n    handleImportSuccess(){\r\n      this.$message.success(\"导入成功\")\r\n      this.load()\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<!--在此处定义自定义的style-->\r\n<!--！important用于提高该项的优先级-->\r\n<style>\r\n.headerBg{\r\n  background: #cccccc !important;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}